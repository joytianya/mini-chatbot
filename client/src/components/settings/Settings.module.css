.modal {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.5);
  display: flex; /* Default to flex, controlled by isOpen prop in component */
  justify-content: center;
  align-items: center;
  z-index: 1000;
}

.content {
  width: 80%;
  max-width: 800px;
  background-color: #fff;
  border-radius: 8px;
  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.2);
  overflow: hidden;
  max-height: 90vh;
  display: flex;
  flex-direction: column;
}

.header {
  padding: 16px;
  border-bottom: 1px solid #e0e0e0;
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.body {
  padding: 20px;
  overflow-y: auto;
  flex: 1;
}

.footer {
  padding: 16px;
  border-top: 1px solid #e0e0e0;
  display: flex;
  justify-content: flex-end;
}

.button {
  padding: 8px 16px;
  border-radius: 4px;
  border: none;
  cursor: pointer;
  margin-left: 10px;
  transition: background-color 0.2s ease, color 0.2s ease; /* Add transition */
}

.saveButton {
  background-color: var(--primary-color); /* Use variable */
  color: white; /* Assuming light text */
  border: 1px solid var(--primary-color); /* Add border */
}
.saveButton:hover {
  opacity: 0.9;
}

.cancelButton {
  background-color: var(--surface-color); /* Use variable */
  color: var(--text-secondary); /* Use variable */
  border: 1px solid var(--border-color); /* Add border */
}
.cancelButton:hover {
  background-color: var(--bg-color);
}

.formGroup {
  margin-bottom: 20px;
}

.section {
  margin-bottom: 30px;
}

.configItem {
  border: 1px solid #e0e0e0;
  border-radius: 4px;
  padding: 15px;
  margin-bottom: 15px;
  position: relative;
}

.input {
  width: 100%;
  padding: 8px;
  margin-top: 5px;
  border-radius: var(--radius-sm); /* Use variable */
  border: 1px solid var(--border-color); /* Use variable */
  box-sizing: border-box; 
  background-color: var(--surface-color); /* Ensure bg color */
  color: var(--text-color); /* Ensure text color */
}
.input:focus {
  border-color: var(--primary-color); /* Highlight focus */
  outline: none;
}


.label {
  display: block;
  margin-bottom: 10px; /* Adjusted from marginBottom */
}

.addButton {
  background-color: #4caf50;
  color: white;
  padding: 8px 16px;
  border: none;
  border-radius: 4px;
  cursor: pointer;
  margin-top: 10px;
}

.deleteButton {
  position: absolute;
  top: 10px;
  right: 10px;
  background-color: #f44336;
  color: white;
  border: none;
  border-radius: 4px;
  padding: 5px 10px;
  cursor: pointer;
}
.deleteButton:hover {
  opacity: 0.9;
}

.closeButton {
  background-color: transparent;
  border: none;
  font-size: 20px;
  cursor: pointer;
  color: var(--text-secondary); /* Style close button */
}
.closeButton:hover {
  color: var(--text-color);
}

/* Dark mode adjustments using :global selector */
:global(.dark) .content { 
  background-color: var(--surface-color); 
  border: 1px solid var(--border-color); /* Add border for contrast */
}
:global(.dark) .header,
:global(.dark) .footer {
  border-color: var(--border-color);
}
:global(.dark) .header h2 {
  color: var(--text-color);
}
:global(.dark) .body {
  color: var(--text-color);
}
:global(.dark) .configItem { 
  border-color: var(--border-color); 
  background-color: rgba(255, 255, 255, 0.03); /* Subtle background */
}
:global(.dark) .label {
  color: var(--text-secondary);
}
:global(.dark) .input { 
  background-color: var(--bg-color); 
  border-color: var(--border-color); 
  color: var(--text-color); 
}
:global(.dark) .input:focus {
  border-color: var(--primary-color);
}
:global(.dark) .cancelButton { 
  background-color: var(--surface-color); 
  color: var(--text-secondary); 
  border-color: var(--border-color); 
}
:global(.dark) .cancelButton:hover { 
  background-color: var(--bg-color); 
}
:global(.dark) .closeButton {
  color: var(--text-secondary);
}
:global(.dark) .closeButton:hover {
  color: var(--text-color);
}
/* Keep Add/Delete button colors or adjust for dark mode if needed */
/* :global(.dark) .addButton { ... } */
/* :global(.dark) .deleteButton { ... } */
